// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// @id - primary key , ? - optional

model User{
  id Int @id @default(autoincrement())
  username String @unique @default("jitesh")
  fullname String @default("Jitesh Prajapati")
  email String @unique 
  password String
  avatar String @default("jpg")
  post Post[] @relation("UserPosts")
  likedPost Post[] @relation("LikedPosts")
  bookmarks Post[]  @relation("UserBookmarks")
  comment Comment[]                       
  likedComments Comment[] @relation("likedComments")
  createdAt DateTime @default(now())
}
model Post{
  id Int @id @default(autoincrement())
  user User @relation("UserPosts",fields: [user_id],references: [id],onDelete: Cascade)
  user_id Int
  title String 
  slug String 
  postImage String
  content String
  status Boolean
  likedBy User[] @relation("LikedPosts")
  bookmarkedBy User[] @relation("UserBookmarks")
  comment Comment[]
  comment_count Int @default(0)
  createdAt DateTime @default(now())
}

model Comment{
  id String @id @default(uuid())
  post Post @relation(fields: [post_id],references: [id],onDelete: Cascade)
  post_id Int
  likedBy User[] @relation("likedComments")
  user User @relation(fields: [user_id],references: [id],onDelete: Cascade)
  user_id Int
  comment String
}